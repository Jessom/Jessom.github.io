{"meta":{"title":"わタしの ブログ","subtitle":"watasi的博客","description":"个人博客","author":"わタし","url":"http://watasi.cn"},"pages":[{"title":"我的项目","date":"2017-07-29T06:01:22.372Z","updated":"2017-07-29T06:01:22.372Z","comments":false,"path":"categories/index.html","permalink":"http://watasi.cn/categories/index.html","excerpt":"","text":""},{"title":"我的标签","date":"2017-07-29T06:00:40.448Z","updated":"2017-07-29T06:00:40.448Z","comments":false,"path":"tags/index.html","permalink":"http://watasi.cn/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"基于MUI开发的一套模板","slug":"基于MUI开发的一套模板","date":"2017-08-01T00:28:18.781Z","updated":"2017-08-01T00:52:17.451Z","comments":true,"path":"2017/08/01/基于MUI开发的一套模板/","link":"","permalink":"http://watasi.cn/2017/08/01/基于MUI开发的一套模板/","excerpt":"","text":"项目介绍公司准备用MUI框架，开发一套模板，方便于未来进行二次、三次开发。本人本着绝对服从领导指示的原则，参与了模板的开发，这里把项目开源一下。该项目目前功能不是很完善(至少提交App Store被批为无用的爱啪啪)，后续会添加更多的功能。戳这里查看项目源码。 目录结构12345678910111213141516171819202122232425262728|-default 页面资源 |-css 样式表 |-css sass编译后的css |-sass sass源码 |-iconfont 字体图标 |-images 图片资源 |-js 页面js文件|-Public 公共资源 |-css 公共css |-images 公共图片资源 |-js 公共js文件 |-plugins 插件|-.project HBuilder编辑器生成文件|-manifest.json app配置文件|-abotut.html 关于我们|-detail.html 详情|-editor.html 编辑|-forget_password.html 找回密码|-home.html 主页|-index.html 入口|-login.html 登录|-personal.html 个人|-preview.html 预览|-publish.html 发布选项|-reg.html 注册|-release.html 发布|-setting.html 设置|-userinfo.html 个人信息 技术栈 主要用到的就是MUI 数据渲染的部分使用了vue1.0.28 功能[x] 注册[x] 登录[x] 发布文章[x] 浏览文章","categories":[{"name":"mui","slug":"mui","permalink":"http://watasi.cn/categories/mui/"}],"tags":[]},{"title":"iis7托管nodejs应用程序","slug":"iis7托管nodejs应用程序","date":"2017-07-29T06:36:22.229Z","updated":"2017-07-31T00:43:13.541Z","comments":true,"path":"2017/07/29/iis7托管nodejs应用程序/","link":"","permalink":"http://watasi.cn/2017/07/29/iis7托管nodejs应用程序/","excerpt":"","text":"1. 参考资料http://www.jb51.net/article/61569.htmhttp://www.cnblogs.com/chenweixuan/p/5489343.html 2. 开始NodeJsURL Rewriteiisnodeiisnode x86下载iisnode x64下载 安装完成后，在IIS中创建站点，指向nodejs应用程序目录(这里以express项目为例)，在nodejs应用程序中添加web.config文件： 123456789101112131415&lt;configuration&gt; &lt;system.webServer&gt; &lt;handlers&gt; &lt;add name=&quot;iisnode&quot; path=&quot;start.js&quot; verb=&quot;*&quot; modules=&quot;iisnode&quot; resourceType=&quot;Unspecified&quot; requireAccess=&quot;Script&quot; /&gt; &lt;/handlers&gt; &lt;rewrite&gt; &lt;rules&gt; &lt;rule name=&quot;all&quot;&gt; &lt;match url=&quot;/*&quot; /&gt; &lt;action type=&quot;Rewrite&quot; url=&quot;start.js&quot; /&gt; &lt;/rule&gt; &lt;/rules&gt; &lt;/rewrite&gt; &lt;/system.webServer&gt;&lt;/configuration&gt; 注意： 及 start.js文件 12#!/usr/bin/env noderequire(&apos;./bin/www&apos;);","categories":[],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://watasi.cn/tags/nodejs/"},{"name":"iis","slug":"iis","permalink":"http://watasi.cn/tags/iis/"}]},{"title":"mui监测IOS版本更新","slug":"mui监测IOS版本更新","date":"2017-07-29T05:57:23.316Z","updated":"2017-07-29T05:59:24.499Z","comments":true,"path":"2017/07/29/mui监测IOS版本更新/","link":"","permalink":"http://watasi.cn/2017/07/29/mui监测IOS版本更新/","excerpt":"","text":"使用mui开发混合app，上架app stroe后，监测app store是否有更新，并提示用户跳转app store更新应用。123456789101112131415161718192021222324252627282930var ver; // 用于保存当前应用版本mui.plusReady(function()&#123; plus.runtime.getProperty(plus.runtime.appid, function(inf) &#123; ver = inf.version; // 当前应用版本 var ua = navigator.userAgent.toLowerCase(); if(/iphone|ipad|ipod/.test(ua)) &#123; // iphone mui.ajax(&#123; url: 'http://itunes.apple.com/lookup?id=1166765111', type: \"GET\", dataType: \"json\", data: &#123; id: 1166765111 &#125;, contentType:'application/x-www-form-urlencoded;charset=UTF-8', success: function(res)&#123; //console.log(JSON.stringify(res)); var version = res.results[0].version; if(version &gt; ver) &#123; mui.alert(res.results[0].releaseNotes, \"版本更新\", \"确定\", function() &#123; var url = 'itms-apps://itunes.apple.com/us/app/id1166765111'; plus.runtime.openURL(url); &#125;) &#125; &#125; &#125;) &#125; &#125;);&#125;);","categories":[],"tags":[{"name":"mui","slug":"mui","permalink":"http://watasi.cn/tags/mui/"}]},{"title":"Nodejs使用request以流的形式转发图片","slug":"Nodejs使用request以流的形式转发图片","date":"2017-07-29T02:55:12.404Z","updated":"2017-07-29T05:51:26.283Z","comments":true,"path":"2017/07/29/Nodejs使用request以流的形式转发图片/","link":"","permalink":"http://watasi.cn/2017/07/29/Nodejs使用request以流的形式转发图片/","excerpt":"","text":"做项目的时候，需要用Nodejs做代理转发，服务器那边要求图片以流的方式上传，这里记录一下Nodejs以流的形式读取本地图片并上传。 1. 安装依赖1npm install request md5 2. 需要模块1234const fs = require(\"fs\");const path = require(\"path\");const request = require(\"request\");const md5 = require(\"md5\"); 3. 具体操作1234567891011121314151617181920212223242526272829// 获取前台穿过来到图片base64信息let img = req.body.img;// 去掉base64头部let base64Data = img.replace(/^data:image\\/\\w+;base64,/, \"\");// 转换成二进制let buffer = new Buffer(base64Data, \"base64\");// 生成图片md5值let md5Data = md5(buffer);// 保存图片fs.writeFile(path.join(__dirname+\"/../uploads\", `$&#123;md5Data&#125;.jpg`), buffer, (err) =&gt; &#123; if(err) &#123; console.log(err); return; &#125; // 读取图片 fs.createReadStream(path.join(__dirname+`/../uploads/$&#123;md5Data&#125;.jpg`)).pipe(request(&#123; url: url, method: \"POST\", headers: &#123; \"Content-Type\": \"application/json\" &#125; ... &#125;, (error, response, body) =&gt; &#123; console.log(body); &#125;));&#125;)","categories":[],"tags":[{"name":"nodejs","slug":"nodejs","permalink":"http://watasi.cn/tags/nodejs/"}]}]}